// **********************************************************************************
// * Copyright (c) 2013 Robin Murray
// **********************************************************************************
// *
// * File: irParserConstants.cs
// *
// * Description: Token literal values and constants.
// *
// * Author: Robin Murray
// *
// * Generated By:JavaCC: Do not edit this line. irParserConstants.java
// *
// **********************************************************************************
// *
// * Granting License: The MIT License (MIT)
// * 
// *   Permission is hereby granted, free of charge, to any person obtaining a copy
// *   of this software and associated documentation files (the "Software"), to deal
// *   in the Software without restriction, including without limitation the rights
// *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// *   copies of the Software, and to permit persons to whom the Software is
// *   furnished to do so, subject to the following conditions:
// *   The above copyright notice and this permission notice shall be included in
// *   all copies or substantial portions of the Software.
// *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// *   THE SOFTWARE.
// * 
// **********************************************************************************

// **********************************************************************************
// * Using
// **********************************************************************************

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

// **********************************************************************************
// * Implementation
// **********************************************************************************

namespace DemiTasse.irpsr
{
    public class irParserConstants
    {
        /** End of File. */
        public static readonly int EOF = 0;

        public enum RegExpId
        {
            /** RegularExpression Id. */
            UNDEFINED = -1,
            /** RegularExpression Id. */
            kwPROG = 6,
            /** RegularExpression Id. */
            kwVARCNT = 7,
            /** RegularExpression Id. */
            kwTMPCNT = 8,
            /** RegularExpression Id. */
            kwARGCNT = 9,
            /** RegularExpression Id. */
            kwMOVE = 10,
            /** RegularExpression Id. */
            kwJUMP = 11,
            /** RegularExpression Id. */
            kwCJUMP = 12,
            /** RegularExpression Id. */
            kwLABEL = 13,
            /** RegularExpression Id. */
            kwCALLST = 14,
            /** RegularExpression Id. */
            kwRETURN = 15,
            /** RegularExpression Id. */
            kwESEQ = 16,
            /** RegularExpression Id. */
            kwMEM = 17,
            /** RegularExpression Id. */
            kwBINOP = 18,
            /** RegularExpression Id. */
            kwCALL = 19,
            /** RegularExpression Id. */
            kwTEMP = 20,
            /** RegularExpression Id. */
            kwNAME = 21,
            /** RegularExpression Id. */
            kwFIELD = 22,
            /** RegularExpression Id. */
            kwPARAM = 23,
            /** RegularExpression Id. */
            kwVAR = 24,
            /** RegularExpression Id. */
            kwCONST = 25,
            /** RegularExpression Id. */
            kwSTRING = 26,
            /** RegularExpression Id. */
            DIGIT = 27,
            /** RegularExpression Id. */
            LETTER = 28,
            /** RegularExpression Id. */
            INTVAL = 29,
            /** RegularExpression Id. */
            STRVAL = 30,
            /** RegularExpression Id. */
            ID = 31,
            /** RegularExpression Id. */
            kw32 = 32, /* space */
            kw33 = 33, /* ! */
            kw34 = 34, /* " */
            kw35 = 35, /* # */
            kw36 = 36, /* $ */
            kw37 = 37, /* % */
            kw38 = 38, /* & */
            kw39 = 39, /* ' */
            kw40 = 40, /* ( */
            kw41 = 41, /* ) */
            kw42 = 42, /* * */
            kw43 = 43, /* + */
            kw44 = 44, /* , */
            kw45 = 45, /* - */
            kw46 = 46, /* . */
            kw47 = 47, /* / */
            kw48 = 48, /* 0 */
            kw49 = 49, /* 1 */
            kw50 = 50, /* 2 */
            kw51 = 51, /* 3 */
            kw52 = 52  /*  4*/
        }

        /** Lexical state. */
        public static int DEFAULT = 0;

        /** Literal token values. */
        public static String[] tokenImage = 
        {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\n\"",
            "\"\\r\"",
            "\"\\f\"",
            "\"IR_PROGRAM\"",
            "\"varCnt\"",
            "\"tmpCnt\"",
            "\"argCnt\"",
            "\"MOVE\"",
            "\"JUMP\"",
            "\"CJUMP\"",
            "\"LABEL\"",
            "\"CALLST\"",
            "\"RETURN\"",
            "\"ESEQ\"",
            "\"MEM\"",
            "\"BINOP\"",
            "\"CALL\"",
            "\"TEMP\"",
            "\"NAME\"",
            "\"FIELD\"",
            "\"PARAM\"",
            "\"VAR\"",
            "\"CONST\"",
            "\"STRING\"",
            "<DIGIT>",
            "<LETTER>",
            "<INTVAL>",
            "<STRVAL>",
            "<ID>",
            "\"(\"",
            "\"=\"",
            "\",\"",
            "\")\"",
            "\"{\"",
            "\"}\"",
            "\"==\"",
            "\"!=\"",
            "\"<\"",
            "\"<=\"",
            "\">\"",
            "\">=\"",
            "\"[\"",
            "\"]\"",
            "\"+\"",
            "\"-\"",
            "\"*\"",
            "\"/\"",
            "\"&&\"",
            "\"||\"",
        };
    }
}
